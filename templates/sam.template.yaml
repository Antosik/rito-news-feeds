AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  rito-news-feeds
  Generates an Atom, RSS and JSON feed based on github.com/Antosik/rito-news data

Globals:
  Function:
    MemorySize: 512
    Timeout: 300
    Tracing: Active
    Environment:
      Variables:
        BUCKET_NAME: !Ref BucketName
        DOMAIN_NAME: !Ref DomainName
        DISTRIBUTION_ID: !Ref DistributionId
        TTL: !Ref TTL

Parameters:
  BucketName:
    Type: String
    Description: A S3 bucket name, eg. my-bucket-name
  DomainName:
    Type: String
    Description: A domain name, eg. example.com.
  DistributionId:
    Type: String
    Description: CloudFormation distribution id
  Stage:
    Type: String
    Default: dev
    Description: Stage name aka dev/prod
  TTL:
    Type: Number
    Default: 15
    Description: Time-to-live for RSS feeds

Resources:
  #region Chrome layer
  ChromiumLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      LayerName: chromium-layer
      ContentUri: ../layers/chromium
      CompatibleRuntimes:
        - go1.x
  #endregion Chrome layer

  #region RitoNews Lambda role
  RitoNewsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: S3BuckerGetPutAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - s3:GetObject
                - s3:PutObject
                Resource: !Sub
                  - "arn:aws:s3:::${BucketName}/*"
                  - BucketName: !Ref BucketName
        - PolicyName: CFInvalidationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - cloudfront:CreateInvalidation
                Resource: !Sub
                  - "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DistributionId}"
                  - DistributionId: !Ref DistributionId
  #endregion RitoNews Lambda role

  #region League of Legends
  LeagueOfLegendsStatusChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-lol-status-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL

  LeagueOfLegendsNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-lol-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  
  LeagueOfLegendsEsportsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: go1.x
      Architectures:
        - x86_64
      FunctionName: !Sub
        - 'rito-news-lol-esports-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: lolesports
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Timeout: 600
      Layers:
        - !Ref ChromiumLayer
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion League of Legends

  #region VALORANT
  VALORANTStatusChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-val-status-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  
  VALORANTNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-val-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  
  VALORANTEsportsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: go1.x
      Architectures:
        - x86_64
      FunctionName: !Sub
        - 'rito-news-val-esports-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: valesports
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Timeout: 600
      Layers:
        - !Ref ChromiumLayer
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion VALORANT

  #region Legends of Runeterra
  LegendsOfRuneterraStatusChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-lor-status-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  
  LegendsOfRuneterraNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: go1.x
      Architectures:
        - x86_64
      FunctionName: !Sub
        - 'rito-news-lor-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: lornews
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Timeout: 600
      Layers:
        - !Ref ChromiumLayer
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion Legends of Runeterra

  #region Teamfight Tactics
  TeamfightTacticsNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-tft-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion Teamfight Tactics

  #region Wild Rift
  WildRiftStatusChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-wr-status-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL

  WildRiftNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-wr-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL

  WildRiftEsportsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: go1.x
      Architectures:
        - x86_64
      FunctionName: !Sub
        - 'rito-news-wr-esports-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: wresports
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Timeout: 600
      Layers:
        - !Ref ChromiumLayer
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion Wild Rift

  #region Riot Games
  RiotGamesNewsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-riotgames-news-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL

  RiotGamesJobsChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided.al2
      Architectures:
        - arm64
      FunctionName: !Sub
        - 'rito-news-riotgames-jobs-${Stage}'
        - Stage: !Ref Stage
      CodeUri: ../
      Handler: bootstrap
      Role: !GetAtt RitoNewsLambdaRole.Arn
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub
              - 'rate(${TTL} minutes)'
              - TTL: !Ref TTL
  #endregion Riot Games
